Howto transfer mailclient mails from one to another
Addendum : filtering mails

atrsoft gmbh 2018
Part of the MailTransfer script system

This contains small chepters with these headings

- For the impatient
- Names and concepts
- Concepts again
- A mail is ...
- Setting up the rules
- How does it work ?
- Making settings
- Making rules
- Rules for lists
- Rules to filter mails you want to see
- Rules to filter mails you dont want to see
- Using perl code
- Using traceroute
- Pools
- How to adjust things
- How to handle errrrrrroorrrs  - ups ...
- My private collection of rules ... 
- What is that vanilla thing ?
- Restrictions
- History
- Contact

-------------------------------------------------------------------------------

For the inpatient

You have not much time, so open a shell window or log in - details later...

Then create a working directory, for this we use a t here.

 > mkdir t
 > cd t

Copy all scripts to the t directory.

> ls -l
  -rw-rw-r--.  1 ar ar 40162 13. Apr 22:24 MailTransferDirData.pm
  -rw-rw-r--.  1 ar ar  3359 12. Apr 00:10 MailTransferDirListClaws.pm
  -rw-rw-r--.  1 ar ar  4300 12. Apr 00:10 MailTransferDirListEvolution.pm
  -rw-rw-r--.  1 ar ar  3895 12. Apr 00:10 MailTransferDirListKmail.pm
  -rw-rw-r--.  1 ar ar  3220 12. Apr 00:10 MailTransferDirListMutt.pm
  -rw-rw-r--.  1 ar ar 29467 12. Apr 00:10 MailTransferDirList.pm
  -rw-rw-r--.  1 ar ar  5840 12. Apr 00:10 MailTransferDirListSeamonkey.pm
  -rw-rw-r--.  1 ar ar  3298 12. Apr 00:10 MailTransferDirListSylpheed.pm
  -rw-rw-r--.  1 ar ar  5913 12. Apr 00:10 MailTransferDirListThunderbird.pm
  -rw-rw-r--.  1 ar ar  3312 12. Apr 00:10 MailTransferDirListVanilla.pm
  -rw-rw-r--.  1 ar ar  2754 12. Apr 00:10 MailTransferExec.pl
  -rwxr-x---.  1 ar ar 17963 16. Apr 23:23 MailTransferFilter.pl
  -rw-rw-r--.  1 ar ar  3156 12. Apr 00:10 MailTransferGen.pl
  -rw-rw-r--.  1 ar ar 10867 14. Apr 21:26 MailTransferMail.pm
  -rw-rw-r--.  1 ar ar  3061 15. Apr 22:50 MailTransferMatch.pm
  -rw-rw-r--.  1 ar ar 37001 15. Apr 23:15 MailTransferRule.pm
  -rw-rw-r--.  1 ar ar  4117 12. Apr 00:10 MailTransferScan.pl
...

Should look similar like this (numbers can chance ).

Create a rulesfile that fits the needs of the filter.

Run the filter like this

> perl MailTransferFilter.pl /var/spool/mail/ar

Now for the ones that have time to ask what and how - the rest....

-------------------------------------------------------------------------------

Names and concepts

This should help you to get in.

First the names.

- mail
A so called file that is transferred from one computer to another and
has a format that fullfilles the so called rfc definitions for a
smtp transfer agent (sendmail, qmail, ...) mail format.
 
- mailserver
A system that holds mails in, sent them if needed to others via
some kind of communication network stuff

- mailclient
A system that makes it possible to read the mails for a user.

- user
Thats you...

- mailfile
The file in the filesystem that holds the mail information.

- mailbox
The thing you have in your mailclient that holds mails - mostly in so
called folders

- folder
A collection of mails, not separated any more deeper.

- directory
A thing in the filesystem of the computer to hold multiple files.

- file
A thing in the filesystem of the computer to hold data.

- index
A thing that helps you to find the thing you search. It has
normally the information about where, what and how big the thing is.
Sometiems also if you have read it, if you have amade a reply etc etc.

- shell
A command window or a login window for execution of commands  by using
the keyboard, so called commandline sometimes

- citate
A citate starts with a
### begin
on its own line and ends with a
### end
on its own line. Everything between is the citate text itself...

- storage directory
The root of all evil - the directory that holds the basic folders
and sometimes mailfiles. Can be a single thing.
If your system supports multiple you have to do the transfers
at best for each separately...

- header
A mail consits of some technical information at its beginning. This is called
the header.

- body
A mail consists of the real content of the mail. This is everything
after its header.

- tag
A single information part in the header with a tagname and : in to make it technical
a single thing.

- mime
A standard to make mails work with things like attachments and multiple
kinds of views for a content (text and html for example ).

- rule
A rule is a thing that describes how the filter should proceed with a mail.

- match
A match is a thing that is used to check if a rule has to process a
mail or not.

- maillist
A system that uses mail to sent you info you want from many users.

- route
A list of systems that connect the start of a traceroute run with the target system.

- whitelist
A list of paterns to determine a system that is not needed to be traced

- blacklist
A list of paterns to determine a system that is not needed to be traced

----------------------------------------------------------

Concepts

Now that we have that, we can start with the concepts.

The mails are located after you sent them or receive them in the
filesystem of the machine - computer - whatever you call it - with which
you now try to see them.

You have a program - some call it nowadays app - that you use to see them.

And sometimes to compose new mails and sent them.

That program is a mailclient program.

We use here mailclients for linux and unix, and we have the mail in files
that are maintained by the mailclient - not the mailserver.

The transfer works for the mail clients that are today in for linux and
some other systems.

Here the list that we can use.

claws-mail

Actual version is 3.15.1 

A simple but good looking one, has some additional features. Is a graphical
user interface - meaning you have things like menus, buttons, and use a
mouse or trackpad or even a touchscreen to stear it ..

evolution

Actual version is 3.26.5

A more complex program, its part of the gnu desktop programs, and is
perhaps a full solution for every need ... but also a big one..
The graphical user interface is in again here...

kmail

Actual version is 5.7.2

Also a more complex program - but this time its another system, the so
called k desktop environment, that delivers the thing.
Also a graphical user interface...

mutt

Actual version is 1.9.2

A command line tool, that is popular for the people that use mostly
the shell and only for small time the GUI of a system.
It is a part of mostly every unix today and even on windows available.

sylpheed

Actual version is 3.6.0

Seems to me a very simple one of the graphical user interface programs.
Has focus on mails only...

seamonkey

Actual version is 2.49.1

A big one from the mozilla organisation, is a combination of all the
things you need in the web today, browser, mail, calendar ...
Looks like a combination of most isolated programs (firefox, thunderbird)...

thunderbird

Actual version is 52.6.0

A big one from the mozilla organisation, with focus on mails, calendar and
not so much web here ... of course a graphical one ..


-------------------------------------------

Ok. You use one of these. Then you are in.

-------------------------------------------

If you use one of these you are out ( but you can use still a similar ):

geary - cannot be used wihtout an imap server - which I dont use on my system.

mailspring - did not made it on my box after starting.

mulberry - did not start on my box (perhaps a 2007 x86 is simply outdated)

hiri - works only with a microsoft mail server as far as I can say

zimbra - did not start for my user after installation.

So I dont support systems that cannot run on my box.

End of story.
--------------------------------------------

The systems I support have all a storage for the mails in the filesystem.
At least today (2018, febuary ..) I can locate the files in question
without too much sherlock homes things ... if the boys and girls behind
the tools change that - I cut the support for them. End of story.

You as an user - with exception of mutt users - have a different sight of
the things. You know folders - lists - already seen, dropped and so on mails
from your tool.

We have to make a rule file that supports at least a dummy system, vanilla,
to make a simple filtering.

If you use a mailsystem that cannot be supported directly, you can
use vanilla as a target or install one that is supportet to see the
filtered mails.

The mails can be given by a file - the mbox format - or by a directory - the
maildir format.

You have the setup things.

After that is done you can run the filter against the file you want to filter.

The filter reads in the settings, then the rules, then process that file
mail by mail from first to last and use every rule from first to last till it has a stop
for a rule that hits the mail (hit means : all conditions are fullfilled to do the
things in the rule that we want to be done).

At the end its possible to get rid of the mails you have processed.

-------------------------------------------------------------------------------

A mail is ...

For the transfer a part of a file.

The file is located in the filesystem of the computer that you use - not
a remote server, nor an imap or pop gateway, and not a binary encrypted thing
like the microsoft way of life ... for now databases are out, too.

The file can hold one mail at least.

For the mail its a bit fuzzy what it is - the rfc definetely says about
it something - but in the end we have a thing that we can at best describe
like this:

- its a text file part
- it has a header and a body part
- for the header there are no empty lines in
- for the body the thing contains of "some" text 

Let us see a small one here to unserstand.

### begin
From root@hydra.alphaset.de  Sun Feb 11 21:19:34 2018
X-Mozilla-Status: 0009
X-Mozilla-Status2: 00000000
Return-Path: <root@hydra.alphaset.de>
Received: from hydra.alphaset.de (localhost [127.0.0.1])
	by hydra.alphaset.de (8.15.2/8.15.2) with ESMTP id w1BKJYuf005341
	for <ar@hydra.alphaset.de>; Sun, 11 Feb 2018 21:19:34 +0100
Received: (from root@localhost)
	by hydra.alphaset.de (8.15.2/8.15.2/Submit) id w1BKJYtx005340
	for ar; Sun, 11 Feb 2018 21:19:34 +0100
From: root <root@hydra.alphaset.de>
Message-Id: <201802112019.w1BKJYtx005340@hydra.alphaset.de>
Date: Sun, 11 Feb 2018 21:19:34 +0100
To: ar@hydra.alphaset.de
Subject: hugo2
User-Agent: Heirloom mailx 12.5 7/5/10
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

So 11. Feb 21:19:34 CET 2018

### end

Ok, thats not so much here ..

It was done by mutt and i used the date command as source, then mailed it
to me on my box (and yes, i use internal a network named alphaset.de , but
this is simply internal for my behind my linux nat ...)

We have a header. Its from line 

###begin
From root@hydra.alphaset.de  Sun Feb 11 21:19:34 2018
###end

to line

###begin
Content-Transfer-Encoding: 7bit
###end

You see there is no empty line in - no line with no text at all ...

Then we have an empty line. Its the separation of header and body.

Every mail has this separation - and I count on that in the split thing ..
Later more about this ...

The body then contains only one line - its 

###begin
So 11. Feb 21:19:34 CET 2018
###end

Again there is an empty line after this - its technically not needed, but
its normally always in.

This is one mail - you have a lot of technical stuff in.

For the rest we use the term tag for a thing in the header that holds
the information.

The tag is starting at the first column with the name - the name ends with a : and
there is no space inside. The name of the tag in the above mail is then one of

- X-Mozilla-Status
- X-Mozilla-Status2
- Return-Path
- Received
- From
- Message-Id
- Date
- To
- Subject
- User-Agent
- MIME-Version
- Content-Type
- Content-Transfer-Encoding

As you can see all start with a upper case letter ...

You have after the : till the next tag the content of the tag.
The content can be spred over multiple lines.
In that case the lines are starting with spaces.

Here we have on

###begin
Received: (from root@localhost)
	by hydra.alphaset.de (8.15.2/8.15.2/Submit) id w1BKJYtx005340
	for ar; Sun, 11 Feb 2018 21:19:34 +0100
###end

You have now of course the most interesting tags with To, From, Subject and
sometimes Cc in.

The rest can help to identify not wanted mails, but the basic info
is in that four tags.

Your mails are always holding text - its visible with a text editor.

If someone uses not text - well, thats possible, but for the header I think
at least bad taste...

OK.

We have now two ways a system can store mails.

One is to use one file per mail.

The other is  - use one file for many mails.

The first one is technically better - I like to have things that are ONE
in ONE physical entity, not mixed with others.

So I like it.

If you have multiple mails in one file - you get trouble.

First of all: Changing a file is a read - manipulate - write thing.

This takes time. So we need something to synchronise with others in case
we have to do jobs with one file only for multiple mails.

Take a look at the unix mailbox in the traditional system.

Its a file in /var/mail or /var/spool/mail or /usr/mail .....

Name is the name of the user.

You can ls the directory and see for yourself.

###begin
ls -l /var/spool/mail

root@hydra ~]# ls -l /var/spool/mail
insgesamt 58184
-rw-rw----. 1 ar           mail  8589556 15. Apr 23:58 ar
-rw-------. 1 atr          mail 50833556  9. Mär 23:20 atr
-rw-rw----. 1         1001 mail        0  1. Dez 17:46 BOGUS.atr.bmBw
-rw-rw----. 1 cassandra    mail        0  3. Dez 21:52 cassandra
-rw-rw----. 1 cpp11        mail        0  3. Dez 21:47 cpp11
-rw-rw----. 1 dba          mail        0  3. Dez 21:47 dba
-rw-rw----. 1 ebay         mail        0 11. Dez 21:21 ebay
-rw-rw----. 1 fwd          mail        0  3. Dez 21:48 fwd
-rw-rw----. 1 java         mail        0  3. Dez 21:48 java
-rw-rw----. 1 javajni      mail        0  3. Dez 21:52 javajni
-rw-rw----. 1 kshell       mail        0  3. Dez 21:50 kshell
-rw-rw----. 1 lf           mail        0  3. Dez 21:48 lf
-rw-rw----. 1 mailtransfer mail        0  4. Feb 21:32 mailtransfer
-rw-rw----. 1 mkshusr      mail        0  3. Dez 22:00 mkshusr
-rw-rw----. 1 mm           mail        0  3. Dez 21:48 mm
-rw-rw----. 1 mkshusr      mail        0  3. Dez 21:51 mmkshusr
-rw-rw----. 1 oracle       mail        0  3. Dez 21:49 oracle
-rw-rw----. 1 popdmail     mail        0  3. Dez 21:49 popdmail
-rw-rw----. 1        13500 mail        0  3. Dez 21:49 qtdemo
-rw-rw----. 1 rest         mail        0 14. Jan 12:11 rest
-rw-------. 1 root         root   150459 16. Apr 21:11 root
-rw-rw----. 1 rpc          mail        0  1. Dez 17:44 rpc
-rw-rw----. 1 shmlog       mail        0  3. Dez 21:51 shmlog
-rw-rw----. 1 tuxedo       mail        0  3. Dez 21:51 tuxedo
-rw-rw----. 1        13001 mail        0  3. Dez 21:50 wildfly
...
[root@hydra ~]# 
###end

So much for my notebook ....

If the mailsystem on the computer has to deliver a mail - you are in
trouble if your mail reader program use the file too.

If you want to add a new mail, and have also delete another by the reader,
well, thats now a BAD situation ...

So the boys and girls who made the system made several things to solve it.

But in the end ... its still not solved.

One group of developers decided to make a new approach.

They create a directory - some call it a folder - and in there three
subdirectories.

They are new, tmp and cur.

The subdirectories hold mails in a one mail per file way.

In theory the new mails then go in into the new directory, the
things are then when they are complete shifted to cur, and the reader then
makes only access to the cur directory... tmp is used for internal use.

So far the theory.

This is called a maildir storage in the rfc, and so I will call it also a

maildir

here.

The one file only thing is a so called berkley mailbox file - short a

mbox file

here.

Ok. Now we have these two and sometimes a variation of the directory.

For example the sylpheed and claws-mail use a kind of maildir - but dont
have the new, cur and tmp in.

The thunderbird and seamonkey use the mbox file, also the mutt...

But at last for kmail its a mix on my box - old kmail used mbox,
new uses maildir ..


-------------------------------------------------------------------------------

Setting up the rules

The filter uses some rules to decide what to do.
Also some defaults and settings are in here.

We check a simple one to see how it works.

Then we set up some additional rules to handle mails you dont want to see.

Here is a first rule file.

###begin
# settings for the MailFilter 
SETTINGS
MAILSYSTEM evolution
MAILSYSTEM DIRECTORY /home/ar/.local/share/evolution/mail/local
PREFIX mailfilter
ENDSETTINGS

# list filtered here
RULE 10
HEADER 
 users@lists.fedoraproject.org
COPY lists/fedora
ENDRULE

# last rule. we sent the thing to ar on the same box
RULE 99999999

ALWAYS
SEND ar
STOP
ENDRULE
# end of rules
###end


That was not so hard after all ...

Empty lines are allowed, they are ignored...

First we have a thing that is not used - a comment.

###begin
# settings for the MailFilter 
###end

It starts with nothing in the line beside empty space and a # sign.
It is ignored then what follows the # sign.
Use them. It helps to understand what and why you did something ...


Next is a 

###begin
SETTINGS
###end

That starts the settings info for the filter.
It has to be the first thing for the starting rule file.

It has to match an ENDSETTINGS that close the settings.

Next is a mailsystem we use. We have

###begin
MAILSYSTEM evolution
###end

in here. You can use yours here - kmail, claws-mail, sylpheed,
thunderbird, seamonkey. And the naked ones, vanilla for a replacement
and mutt.

Next is depending to the system you use. The directory with the mails in

###begin
MAILSYSTEM DIRECTORY /home/ar/.local/share/evolution/mail/local
###end

Huh. This is tough. But if you see for the thing in howto.txt for the
transfer you will find also yours there and how it works.

If any thing fails.....

You need to know where the system starts to put mails on disk.
The filter can - in theory - work without it if you only target mailaccounts.
But its much simpler to use it by targetting one users mailsystem.

You can find the thing this way:
Start in your home directory a find search for a new created folder with a
very strange and rare name like zzzzzzzzzzzzzz .

You will find for the systmes a directory or file with that name ...

> find . -name '*zzzzzzzzzzzzzz*'

If you use the systems that make decorations to the name - see the howto.txt
and what the decoration is ... adjust the find search.

When you have the path to the thing you can see the thing you need is the
rest here till it hits your folder.

Next is a prefix we use for dividing the regular mails and the filtered.

###begin
PREFIX mailfilter
###end

This is a folder then in the system and created below the MAILSYSTEM DIRECTORY
in your mail client system.
Its a plain name - the decorations and helping files are made according
to the mailsystem you set in by the filter, no need for you to do it.
If you intend to use multiple filters - use multiple prefix. So you wont
hurt yourself in parallel writings ...

Last is here 

###begin
ENDSETTINGS
###end

which ends the setting.

The rest are rules.

I have here put in one rule to filter a list and then give the rest with
the next rule to my account.

I use a special account to get the mails via fetchmail from my account
at a free internet mailer.

This one only fetches and filters some unwanted mails ...

The things are then sent to my real user account on the box, and here I do
the simple thing of filtering the lists and be happy with my mails.

So here comes the first rule

###begin
# list filtered here
RULE 10
HEADER 
 users@lists.fedoraproject.org
COPY lists/fedora
ENDRULE
###end

The first thing here is RULE 10

I use a number to identify rules. Its simple and give the thing a
way to reuse rules to make more ...

The next is a so called match. It makes the rule work only for the mails
that have the thing in their header.

###begin
HEADER 
 users@lists.fedoraproject.org
###end

The magic thing here is the second line, with the single space in front.


YES. THERE IS A SINGEL SPACE IN FRONT. Period.

(OK. You can use all a perl is identifiying as a [\s] ... )

It declaires a pattern that has to be fit in the header line that is used.

If you see for your mails you will find a lot of patterns you can use,
but for the mailing list of fedora this is one of the best of them.
Simply check in your mailcleint the Source Code option to see the text and
then check for From: lines and sometimes the Received: lines ..

Next is a thing that states what to do if the mail fits the match.

###begin
COPY lists/fedora
###end

We copy that mail to the folder that is in the mailsystem in mailfilter,
then lists, then fedora.

Technically : the mailsystem directory, then the path that is valid for a folder (!)
with the naming PREFIX / parameter of copy directve ... (ok. too technical ..)

Yes, the thing is created if you dont have it. No need to create it by yourself.

And yes, sometimes a system needs a little help to recognise that.

For claws-mail and sylpheed a rescan is needed of folders. See the right
button menu, then renew flders or so ....

For evolution a switch into the directory, then back and then again in is
needed (so called up down up rebuild my index ...).

Thunderbird shows it directly, and mutt and vanilla dont need any help.

The next thing marks the end of the first rule

###begin
ENDRULE
###end

So we have the first rule in now. It checks the header of the mail and if
a pattern match is made successful for the
    users@lists.fedoraproject.org
we make a copy of the mail in the targetet mailsystem in a folder that is
in mailfilter, then lists, then fedora.

The next rule is a special one, its the last in the rules I have in.

###begin
# last rule. we sent the thing to ar 
RULE 999999999

ALWAYS
SEND ar
STOP
ENDRULE
###end


We have first a comment in. Ok, thats saying its the last ...

Then the rule with a high number. A eight time 9 ...

The next is an empty line - no checks so far.

An ALWAYS states the rule will be done - always.

Next is a SEND ar which sends the mail to the account
ar mailbox file on the box... by simply using filecopy.

In the case of the box I have made the filter, the mbox is in
/var/spool/mail
and the name is the name of the login of my user, ar.

The next is redundand, only to remind you that a rule that is fitting
eats up the mail normally.

STOP

Ok, so no more processing after that rule.

Again an ENDRULE closes the thing.


------------------------------------------------------------------------

How does it work ?

The filter uses the rulefile first to set the default things it need.

If you start with an non existing rule file - it will stop because its not
there. So you need at least a readable file.

The filter also checks if you have the minimum settings in -
without settings it could work, but it would be a bit odd.

So its also a safety against giving the filter a wrong file for rules.

You must at least have in SETTINGS and ENDSETTINGS and one rule.

All things else are set with minimum defaults and works at least under normal
conditions on my box.....

You can have a rule that does nothing at all in.

RULE 0

ENDRULE

This will simply be ignored as a rule - but counts as one for the check if
you have any rules.

But then - why do you need a filter ? To do WHAT ? And HOW ?

But you can try it.

The thing will start, create a log and then process your input files.
But it will not filter anything.

OK, so next is the thing you can do with the settings and rules ...

By the way:

The rule file can be used with the -r switch, or the default in $HOME/.mailfilter.rule

Dont forget the . - I tent to HIDE the rules against anybody..

-----------------------------------------------------------------------------

Making settings

First we simply name the settings and make for every one an example.

I use my setup for my box, its easier for me that way :)

------

MAILSYSTEM a_supported_mailsystem

MAILSYSTEM evolution

# or kmail, claws-mailsylpheed,mutt,vanilla,thiunderbird,seamonkey

This is the name of the mailsystem we use to put mails into its folders.
Its technically needed.

The default is vanilla

It is a dummy system, ony to hold mails on disk.

------

MAILSYSTEM DIRECTORY a_directory_path

MAILSYSTEM DIRECTORY /home/ar/vanilla

This is the path to get to the base directory for the mailsystem. We need
this to construct the real path to the point where the filter
starts to make its folders and then put in the mails.

The thing is tricky, its highly depending on the used system.
See the howto.txt and there for the used mailsystems if you dont know it.

If you cant understand this, make in your mailclient a folder where you
want to start the filter. Name it in a way its unique ..

Then use the glory search tool of your choice to hit it.
I use find for that (see commandline, shell and then man find ...)

OK. If we have it in then ... its easy. Use that name as the prefix, the rest
is then done relative to it...

Default is your home directory and then the subdirectory vanilla.

------

MAILBOX DIRECTORY a_path_to_the_mailbox_directory

MAILBOX DIRECTORY /usr/mail

This is a thing to describe where to copy mails when you use the SEND
directive. It then takes the path that follows and uses it
to make the copy of the mail into that file.
For now only mbox files are supported, I plan to support maildir later ...

Default is /var/spool/mail

------

MAILBOX KIND a_mailsystem_kind

MAILBOX KIND mbox

This is the way to say the thing what is the kind of mailboxdir.

If you have a berkley mbox system - the sendmail way of life - its
a directory of mbox format files. So mbox is it.

Later on I plan to support the rest...  for now I have only mbox.

Default is mbox

------

PREFIX a_vanilla_folder_name

PREFIX mailfilter

This is the prefix folder - or directory vanilla name - for the path that the
filter uses to put mails in with COPY.

The full path is made by using the BASEDIRECTORY - possibly relative to
the working  directory - and then construct the rest with the prefix and then
the argument  to COPY as a vanilla path.
The filter converts the vanilla path to the real path for your mailsystem,
which can be a bit different, and then puts the file in place...

Default is mailfilter

------

SENDMAIL PROGRAM mailercommandline

SENDMAIL PROGRAM /usr/sbin/sendmail

This is used as the program path for the SENDMAIL directive. The mail is
sent by calling the thing with the argument of SENDMAIL directive and pipes
the mail into the program (thats the sendmail way of life ... )

Default is /usr/sbin/sendmail -bm -oi

------

TRACEROUTE PROGRAM traceroutecommandline

TRACEROUTE PROGRAM /usr/bin/traceroute

This is the command line for the traceroute directive. It uses the thing in the
intermediate script and then the traceroute is done that way.

Default is /usr/bin/traceroute

-------

TRACEROUTE COUNT number

TRACEROUTE COUNT 50

This is the number of parallel traceroutes that are maximum used. The script contains that many
traceroute calls and then a wait to synchronise. if you have more to scan its done in
multiple groups then.

Default is 100

------

TRACEROUTE number

TRACEROUTE 2

This is a flag to switch off the traceroute with a 0, switch it on with a 1
and circumvent reuse of existing info with a 2.
The traceroute is off by default, so you only reuse existing traceroute
info if any is available.
There is more info about it and the use in the rules in a separate chapter.

Default is 0

------

EAT INPUT a_number

EAT INPUT 1

This is a flag that says how to handle processed input for the filter.

If the filter succeeds in processing its convenient to kill the input.
That means for input files that they are cut to 0 length - but not deleted.

The directory case is to delete the files in - not the directory itself.

Default is 0

# and only 1 is working for now ... any thing else is as 0

------


EXACT a_number

EXACT 1

This is used in case a maildir directory or a single mail in a mbox file is in.
You skip then the checks for the end and simply use the whole file.
This is handy if there are mails included inside of amils and you cannot split this up.
But its only a hack - so dont use it for mbox files , only for maildir in doubt.

Default is 0

------


CC number

CC 1

This is a flag and it switches on with a number other than 0. The filter then
creates for every
mail a file in the working directory with the naming m<mailindex>.txt where
the index is from 1
for the first mail inthe input to the last one with the highest number.
If a mail is corrupted and consumend in another it can be that there is a whole
in the numbers ..

Default is 0

------


VERBOSE number

VERBOSE 1

This is a flag to make the filter to do more output. Normally it is a quite thing,
only the return code
shows the outcome of the processing. But if you set it to 1 or more you get more output.

Default is  0

------

POOL a_pool_directory_path

POOL spamrules

This is a safeguard thing. You can have mails to construct new rules.
Thats nice, but also give raise to security.

If someone finds how to do it ...

So the only way to add a rule by using a mail is to do it into a pool
that already exists.

Here we can tell the thing what pool exist ...
And we can use multple of them to name multiple pools.

In the real life I use a pool for spam rules, one for whitelist, one for
blacklist and one formailinglists.

Default is

# yes, that right, nothing...

------


CODE a_perl_code_file

CODE inc.pl

The filter can be tailored by using perl code that you write.

The code is read in just before the real filtering starts, so you have the
rules and  the target mailsystem already in.

Then I have a & in the matchers to call the code instead to call a program.

Default is

# yes, again its empty.


-----

Ok. So far we have now in a way to set this.

Above we have a small example, here comes a bit more realistic one

SETTINGS

  MAILSYSTEM thunderbird
  MAILSYSTEM DIRECTORY /home/ar/.thunderbird/o0hd68d2.default/Mail/Local Folders
  # yes, that IDIOTS really use spaces in pathnamens .... and have that
  # profile synto thing in ...

  MAILBOX DIRECTORY /usr/spool/mail
  # thats not right on my box, but works for many

  MAILBOX KIND mbox
  # thats the only that work for now, but we have it in ...

  PREFIX myfilterone
  # if you have diffrent filters, you can use diffrent prefix in here ...

  SENDMAIL PROGRAM mutt
  # ups. didnt try that, but it can work I think ...

  TRACEROUTE PROGRAM traceroute
  # we have the traceroute in there

  TRACEROUTE 2
  # we do tracerouting ...

  EAT INPUT 1
  # ok. we will kill processed input to make no double time things ...

  EXACT 0
  # we have mbox files in, so use the split thing
  
  POOL maillistrules
  POOL spamrules
  POOL maggierules
  POOL FBIRULES
  # wow, thats a lot of pools and rules in here ...

  CODE myinclude.pl
  # here I can do some things with the lists and rules set up so far
  # and deliver code to use ...
  
ENDSETINGS

Did I tell you that you can
- use space and tab to make look it nicer ?
- use the # thing only on lines of itself, not , no, never, ever ... after
  one of the keywords ? 
- even : you can use upper and lower case ...

no, but it should work that way ...

Settings

  Mailsystem kmail

  Eat input 1
  
Endsettings


for example ... but I didnt try that ...

-----------------------------------------------------------------------------

Making rules

The dense thing ...


A Rule consists of the startline, the endline and any line between
has to be empty, a comment, a match or a directive.

The endline is

###begin
ENDRULE
###end

The Startline is one of these four (with two dummy things)
RULE IDNUMBER
RULE AUTO
RULE 
RULE IDNUMBER EXTENDS IDNUMBEROTHERRULE
RULE AUTO EXTENDS IDNUMBEROTHERRULE
RULE EXTENDS IDNUMBEROTHERRULE

A directive is one of these
ALWAYS
NEVER
NOT NEVER
STOP
NOT STOP
NOT STORE
WHY
NOT WHY
NEW RULE
COPY vanilla_path_relative
SEND targetuser
SENDMAIL targetuser
PROC programcommandline
CODE perfunctioncodeline 

A traceroutelist entry is one of these
WHITELIST
BLACKLIST

A match is one of these followed by matchpatterns line by line
HEADER
BODY
ALL
ROUTE
ROUTECOUNT
NOT HEADER
NOT BODY
NOT ALL

To combine the matches you can use
AND
AND NOT

A matchpattern is a perl regular expression or a commandline preceeded by an
identificator.

The identificators are
SPACE ( or better [\s] ) for a regular pattern that has to match
! for a pattern that has NOT to match
/ for the commandline
& for a perlcodeline 

In case of the command it means the thing has to be absolut, and you have to
give the full path.

The patterns are perl regular expressions and must compile as "usual" patterns.

I dont support complex things and taging of matches, so dont overdo it ...
I plan to add a tag support.. but it is not done...

Perhaps I will extend it some day to do the ignore thing ...

-----------------------------------------------------------------------
The not so dense ....

A rule start with the line

Rule .. ... ... 

The rest is simple. We want to identify the rule if we need, so a number is in.

In the simplest case you give the number.

rule 42
or
RULE 1
or
Rule 66
or
rule 123783628764328683277674

Well, perhaps this a bit overkill... use one to 9 digits to be save.

I do give numbers for important rules.

The not so important rules can get a number as long as its unique.

So we have a placeholder in, the auto thing.
It uses the last number, adds one and gives this to the rule.

So instead of giving all the time numbers I give
rule auto
if I dont care about the exact value.

The naked
rule
is similar to
rule auto
so you dont have to type auto in many cases at all.

The number is needed in case we want to extend a rule for a new one.
The extend is a practical thing, you have a blueprint of a rule, and now
you put additional things in.

My extend is othen used for lists with multiple input mailadresses. So is
for example my spam rule one without any match

RULE 1000
COPY fileter/spam
ENDRULE

So it will catch nothing at all.

But in the spamrule pool I use all the time
rule auto extends 1000

and
rule extends 1000 ( the dummy auto )

Meaning: I create here a new one, use the rule 1000 as the blueprint and
put only a specific matcher in ..

This is called some times object orientated way of life ... I call it practical,
but this is your decision if you do it this way.

The last is with numbers.

rule 2000 extends 1000

Ok. No auto for it, so it has the number 2000 this time...

# one hint: I dont check for doubles, but try to not use it ...

This is the way to get rules in.

You have to end a rule with

endrule ( or ENDRULE ... )

Many people like or need it shorter, but I resist here to use the
programers way of life... () [] {} or whatever you normally use.. its not
user friendly at all. 

Use an editor to cut and paste if its too much to type ...

Most rules have some - perhaps sometimes more - actions that they do when they
hit the mail ...

What hit means comes later ...

We can copy the mail to a target on the same box. Its the maildir thing,
on my linux box the maildirectory is in /var/spool/mail and has the form of
mbox format files. Every file is named as the username (and most likely
the home directory for the user ).

I can also use multiple SEND in here, no problem ( well, some system need a
right setup then with suid or gid bits ..).

The SENDMAIL does a real mail sending, so in theory one can route the mails
even to another box (well, and if you are a bad person even spam that way ..)

This is done with the argument as a mailadress.

The program in use is sendmail - if you use another make sure it handles the
way of feeding in the mail the same ...

I think you can use mutt, but I havent checked it ...

You can also use a PROC for it.

The PROC then gets the mail as input piped in like a sendmail.

Be sure to know what you do - the thing is given the mail in a pipe, and
when the pipe ends the program should have done its thing ... so try a
fork and work approach if you need...

The rest is easy.

If I need a rule that is doing it ever time, I have the

always

in. It is normally simply done for the last rule - with the highest id ...

If you insist you can make AND with rules, then the always can be skipped
if the former rule is not a hit ...

Next thing is to make a rule but - ignore it for now, the

NEVER

is doing that job. Its for rules that are in for test, but you have no time
for now, so you decide NOT to have it in for now ...

NEVER is nearly the same as commenting the whole thing.

NEVER can still be better if you decide to make an extend.

But then ... you need to switch the NEVER off...

So we have also a

NOT NEVER

This is a rare thing, I dont use it by myself ... but you CAN use it ...

The WHY is to get some info in the logfile ...

# did I say logfile ? hm ...

We have normally for a rule if it hits that it also STOP the processing.

So we normally have a filter that is used to get to a rule and when we have
a hit in its finished for that mail. Next mail please.

Sometimes we do still want the rest rules to be processed.
So we have the STOP explicitly to show we stop here, but its not needed...

But then: if we want to proceed further we have to switch that stop off..

So we have the

NOT STOP

here to make it through even if we hit the rule.

That makes the extends again need the stop if we used in the extended rule
a nonstop and now wnat to have back the stop ...

A nice rule is to protocol but not consume ..

RULE
ALWAYS
COPY list/allmails
NOT STOP
ENDRULE

OK. That leaves us with the

NEW RULE

and then we enter the so called matches.

NEW RULE is a hack to use mail to define new rules.

I work parttime at my job far away from my box and have no way to access it.

So sending a special mail that is then used to make a new rule is handy.

But to do it with a separate program call like proc seemed to be a bit overkill,
So I made an extension to process the mail inside of the filter.

If your mail hits a rule with newrule it will be processed to make a new
rule file.
There are limitations, so you can only create one rule with one mail, it must
work out and you can only put it into an existing pool.

No overwrite or so - the worst you end up is wasting disk space.


Ok.

Now its time for the match thing.

A rule is processed by checking if its a always , a never and then if it has
matches. If it has neither of these, its skipped and so the next rule is used.

Its done in the reasonable way from 1 to end way in numeric order.

I use normally 99999999 for my end .

This is a big number, so we have plenty of rules in ...

A rule that really checks something needs at least one match.

A match is simple to write:

header
 atr@hugosoft.de

That is all.

Where to be doing the check (header) and then one space and the mailadress in question.

This will (accidently) hit my mailadress in the header of the mail in question.

If the match is given a tru (or precise in perl a not undef ), I say its a hit.

A rule that has a simple isolated match is fullfilled - or call it like
you want - if a match is a hit.

So simple.

We only need to have the thing in question - header, body or all - and then
the pattern (if you dont know than a simple text) we want to hit, and a space in
front of it and BINGO.

You have a mail you think is important because it has a big number in its body ?

BODY
 1000000

will do the job.

Oh, its not one million ?

Ahm.

BODY
 1000000
BODY
 1000001
BODY
  ....

OK. Thats a bit nerving...

So we enter now the REAL power of matches.

The match pattern is a so called regular expression in perl.

See man grep and man perlre and in doubt the glory www.perl.com doc page
for the details.

So we can use
BODY
 [\d]{8,16}

and have numbers from 8 to 16 digits in ... happy now ?

Next thing.

Sometimes we need to match a line - but then something should NOT be in...

So we can use a match with a pattern to match and another NOT to match.

Need a mailadress in but a specific not ?

header
 [^\s]+@hugosoft.de
!info@hugosoft.de

This will hit all mailadresses for hugosoft.de,
but it will not hit info@hugosoft.de in the SAME line.


Multiple checks for the same time are also ok

header
 atr@hugosoft.de
 anton.rommerskrichen@internetprovider.net

This will need both to hit the SAME line.


You need multiple lines to hit ?

Use multiple matches.

Header
 atr@hugosoft.de
Header
 second@hugosoft.de

Ok. So we hit if its the first or the second ...

Ups. I forgot something.

We use IMPLICIT an so called OR here.

Everytime you use a rule and it has more than one thing in its a logical OR ..

So one of it is enough and you hit.

Sometimes this is handy.

If I have multiple info letters from different shops for hardware I can combine
like this

header
 newsletter@euronics.de
header
 info@geizhals.at


and so on. Will go into the same folder / mailbox / proc ....

Ah.

Yes.

There is of course then also a way to combine matches.

The AND thing.

If you want two matches hit together you combine them with AND

header
 atr@hugosoft.de
AND
header
 Cc: anton.rommerskirchen@internetprovider.net


This will hit as a rule only if both is hit for the mail. Can be in different lines
of course then ... or heder and body .. or ...

One is not enough.

The nice thing: it works with as many AND as you want ...

The other thing.

If you really need it you can AND NOT

header
 atr@hugosoft.de
AND NOT
body
 bitcoins

So we only have a hit if the thing is for my mailadress but the body does
not contain  the magic buzzword of today spam machinery...

There is again the thing to use the AND NOT as long as you need ...

Multiple matches are this way easy, but dont forget the AND if you need it.

The OR is implicit, so this will be possible

header
 atr@hugosoft.de
AND NOT
body
 bitcoins

header
 anton.rommerskirchen@internetprovider.net
AND
body
 [\d]{8,16} EURO

so we hit if its for my company email adress, but no bitcoins in,
or if its for my private and a huge amount of euros ... 

Just as it should be ...

Fine.

If you have something you definetly DONT want to have in you have a
one match thing shortcut for that.

NOT HEADER
 To:
COPY filter/spam

This comes in handy if a mail has no To: in its header. Sometimes a
spammer forgets it by purpuse, so if I get a mail without a To: in the
header I drop it.

This is the way to express it - the rule drops the mail by COPY to spam
folder, but only if the header has not a To: in, if its in the rule
does not hit.

Same for

NOT BODY
 http://www.xxx.com

well, if I dont want to get the mail in the rule I can exclude it that way ...

The NOT ALL combines the two.

Important thing:

Only one pattern, and only matches with space here.

Next thing.

You have a fancy quantum supercomputer or a hyper brand new AI system and
want to use it too.

So you can combine the checks for a match with a helper program like this

header
 atr@hugosoft.de
/home/ar/call_my_ai

Then the check for the pattern is made, and if that is done the program
is called. It gets a mail copy as a file as first parameter, so it has to
use the first parameter as the filename and can now use the mail to do
what it has to do ...

The match then checks for the return code.
- a 1 means no good.
- a not 1 (technically 0 and the rest beside 1 ) means ok.

If you made an error in the program return a 0 if you want to make no
error in the filter - the mail will survive that rule, but its better then to
wreck in the filter and never see it again.

Last thing:
You can use perl code - there is a simple example in codetest.rule and
codetest.pl that shows how its used.
The thing is up to you and your perl experiance ...

The rest is now to play with this a bit and after you think you have it
to make your rules.

One hint: there are pools and there is a include thing to make use of pools.

Dont code all rules in one file if you dont need to - use pools and include.

-----------------------------------------------------------------------------

Rules for lists

Lists are one thing that is nice in mails. You subscribe and get it all.

The problem is when you get much mail.

If you want to see them in ...

Make a rule to catch before the spam checks, then route directly.

I have a list for music.

So I catch the thing directly.

Rule 42
Header
 From: .*tangomusic.es
SEND ar
ENDRULE

So I get all of it directly without any spam check - never lose a mail...


Another list is - well - a lot of mails ...

Rule 43
header
 users@lists\.fedoraproject\.org
COPY lists/fedora
ENDRULE

This one collects them in the folder in the mailsystem.

I only read what looks interesting ... not all... and not every time
I check my mails.

Sometimes lists have multiple sources:

rule 44 extends 43
header
 fedora-list@redhat\.com
endrule

This is doing a check twice. So its perhaps better to have a
basic rule - no check but the copy, and then two extends to do the
check.

Or.

Use one rule for all ...

Rule 43
header
 users@lists\.fedoraproject\.org
header
 fedora-list@redhat\.com
COPY lists/fedora
ENDRULE

Both works. You decide.


-----------------------------------------------------------------------------

Rules to filter mails you want to see


I use a setup where I have first my list rules in.

The list rules also cover the mails that I HAVE TO / MUST / ALWAYS and so on
see....

So my rules are starting with 10 or so  - a little reseve if needed ...

The next ten or so are lists, the rest till I hit the spam are individual
mailadresses I dont want to miss..

rule 42
header
 melissa@work.de
SEND ar
ENDRULE

and so on ....

So I get it before any strange mail filter effect in the spam rules get them.

This can be indeed a problem.

Get many mails for my company and they are mostly spam.

Rule 1010
header
 info@hugosoft.de
COPY lists/info
endrule

So I can now check the info list after the regular mails and see if any
non spam is in.

If I have an important I make a rule before spam and get there the thing
on track...

If I would do that with all info - I get rough 40 mails per week about
credits, insurances and so on that dont interest me at all ...

But because its the company I cannot drop them all - sometimes clients
or my consulting lawyer use that thing ...

So, this can reduce the spam, you see only for the subjects or sendes and
ignore the things you dont need... its like a list...

-----------------------------------------------------------------------------

Rules to filter mails you dont want to see

Well.

Thats the tough on.

We talk about spam.

Technical - there is no spam.

Every mail is simply without a flag or tag about that when it leaves the sendes
networkport.

The spam tag of providers is - at best - a hint ....

And it fails in the last time about 70 % now.

OK.

There are so called spamcheckers, but they work mostly on a neutral ruleset.
No clue about what you really dont want to see ( I mean YOU here , not
anyone else ..).

Of course all can be extended by you with new info ...

But thats a different story.

Try it.

If you want to do it yourself, you can enter that game here by
defining rules to catch spam mails.

My base work is a rule that does not catch at all.

rule 1000
copy filter/spam
endrule

My real catchers do the work then like this

rule auto extends 1000
header
 pussy
endrule

or

rule auto extends 1000
body
 bitcoins
endrule


Well. Sort of.

Because there is no technical spam - all mails are valid according to mime and
the rfc - you cannot make a spam detector on top of only the header and body
structure ...

Some try to make similar mails automatic to spam after they find one as
a prototype mail ....

Well. That means you have either to read the first - and then to decide how to
get rid of the next one of that type ...

Or you have to relay on the work of others -- which have perhaps a
different way to think about a mail as you have....

Meaning: You can loose mails in error in spam...

# didnt happen to you ? wow. lucky guy ....

So next is to identify the mails you dont want to see by using the things
you have to see - the header info ....

Its in every mail system and if you have sharp eyes and a good mind
and thinking for regex ... it works.

After hundert or so rules you have - nearly - catched up and
no spam.

But when a new way of spam is there ...

Well, you get it.

Its work YOU have to do. YOU have to add a new rule.

How ?

I think my way is ok, but ...

I use a editor parallel, standing in the pool for spamrules, copy the last
and change the header match. Save, next ...

Alternative is to make a mail with the new rule.

Cut and paste from the mail source code in the mailtool the thing, then open a new mail,
Sent it to my filter account, add only the magic 4 lines

RULE AUTO EXTENDS 1000
HEADER
 #whatever you have in mind for that bastard ...
EDNRULE


Ok, there is a special subject, and some other stuff, also a POOL that has
to be named, but that its. After my account has processed the mail the new rule
is in place and my buddy now kills this one too.

This can be used of course also when I am off ... only my mail has to
come in ...


Last thing:

If you really need it you can use the process check .

See the matcher for it.

I know its slowing things down, but you can make WHAT YOU WANT...

So use it if you think you need it.

For myself I plan to make some extensions, but not for now, so
use that thing if you have a check for a mail and its woking...

-----------------------------------------------------------------------------

Using perl code

You can use perl code in two spots : the match for a line and the rule
to do things after a rule is hit.

First to the easy thing.

You want to match with code.

This can do things that the simple one line match cannot do.

Its in the codetest.rule like this:

RULE 1
header 
&::checkfedoralist
...
ENDRULE


We ignore for now the directive ...

So you do it by using instead of space for a regular expression to match or a !
for one that does not match or a /... command path
by using a & in the first character.

The rest has to be a method that you can call, and the method has to
return a 0 if its a hit, a 1 else ....

Here is the called function from the codetest.pl

sub checkfedoralist {
    my $ret = 0;

    my $c = shift; # the candidate line, speeds up

    my $mail_r = shift ; # the whole mail

    my $s = shift ; # the matcher itself

    my $cnr = shift ; # my code check number to identify the check

    my $lnr = shift; # its line for the candidate
    
    my $i = index($c, 'users@lists.fedoraproject.org');

    return 1 if $i == -1; # bad. no good 

    return $ret;
}

This first looks to be more complicated than a simple match line.

But ....

- it has more control . Can make things with lines before and after ..
- can be faster - a simple index here is faster as the regular expression
- can do external things like use of a database or your favorite blacklister

So yes, it has more to do at first, but it is worth the trick if a simple
regex does not do the thing.

And: It is faster than doing it external with a / command.

Its done by using local creation of the subroutine as a so called closure.
In theory you have access to all the variables that are in the spot at
that moment.

In practise I make a call with all relevant variables - its more convenient
that way and easier to debug the function in isolation ....

So we have in :
- the candidate line,
- the whole MailTransferMail reference,
- the Matcher reference,
- the number of the code check in the matcher counting from 0,
- the line number of the candidate for peeking in mail_r ...

That should be enough to make use of it.

Now the second spot: we have a hit but this time dont want to do a sent
or sentmail or the external process thing. Instead we want to use code
in perl.

We have here similar to the matcher a thing for the CODE in the rule.

RULE 1
header 
&::checkfedoralist
CODE &::printout ($mail_r)
ENDRULE

The thing is the
CODE &::printout ($mail_r)
here.

It is used in case we have a hit (that can be the usual, not only the match
by code as in that rule ... )

The thing is again compiled as a closure function and then executed.

We have here an code example that uses the mails_r from the enveloping
apply function - not the parameter ! -  but that is a more complicated
thing to debug than the parameter way ...

sub printout {

    my $m = shift;

    for (my $i = $m->{hstart}; $i <= $m->{bend} ; ++$i) {
	print $m->{text} -> [$i];
    } 
}


Seem to look like a normal, but the ($mail_r) in the code text makes it
to compile to a closure with the $mail_r captured in.

In the real world I give the major things as arguments too, so you can
switch back to simple use and have then in
- the reference of the MailTransferMail,
- the rulenumber,
- the codenumber counted from 0 to know what CODE it is.

So you have it again in perl and its up to you to make something.

So far for the use.

Now for the code - where comes it in ?

You put it in by use of the -i flag and the name for the file to include.
We need the require her, so dont forget the final 1; ...

The other way is to use the CODE tag in the settings - the name of the
file follows the CODE - see codetest.rule for that.

If you think it would be nice to use directly perl in here ...

Yes, but its totally up to you then to debug it.
I will not accept such thing.

Having a function makes it at least possible to do it in a vanilla helper.

You can use both.

-------------------------------------------------------------------------------

Using traceroute

The fact that spamers do it mostly for money means - they learn and get better.

So today most spam mail is not detected by the neutral rule approch.

The spam mails are signed and have at least for the mailgateways in my case
valid certificats ...

If the spammer uses fake domains, and then rotating subject and from and to tags, you
are in trouble to recognise it . So you can give traceroute a try.

If you activate it with -t flag or with TRACEROUTE 1 or 2 in settings the filter
tries to make a traceroute for the candidate mail.

Not every mail is a candidate. If you traceroute all mails ... well, that needs
a bit more time, more network resources and more trouble with network
admins who suspects you are a hacker ...

So there are two lists to circumvent traceroute - the whitelist and the blacklist.

What is traced ?

The candidate has a list of received tags in the header, and the filter checks
from the last to the first in upward direction for the first one that has
a valid external ipv6 - which it ignores, a valid whitelist - which it ignores,
a valid blacklist - which it ignores, or a valid ip v4 which is NOT a locallized
on (meaning 10. , 172, 192.168 and so on networks ... )

Then the found ip v4 is used for the tracing.

A little example here:

===begin
From SRS0=Qk9R=FD=europe.com=m.lotto@mx.kontent.com  Sun Feb 11 13:28:23 2018
Return-Path: <SRS0=Qk9R=FD=europe.com=m.lotto@mx.kontent.com>
Received: from ltau2.alphaset.de (localhost [127.0.0.1])
	by ltau2.alphaset.de (8.15.2/8.15.2) with ESMTP id w1BCQoR2002074
	for <popdmail@localhost>; Sun, 11 Feb 2018 13:28:23 +0100
Message-Id: <201802111228.w1BCQoR2002074@ltau2.alphaset.de>
Received: from pop.gmx.de
	by ltau2.alphaset.de with POP3 (fetchmail-6.3.26)
	for <popdmail@localhost> (single-drop); Sun, 11 Feb 2018 13:28:23 +0100 (CET)
Received: from mx005.kontent.com ([81.88.40.25]) by mx-ha.gmx.net (mxgmx114
 [212.227.17.5]) with ESMTPS (Nemesis) id 1M2eHv-1ehCiM1983-003b8F for
 <anton.rommerskirchen@gmx.de>; Fri, 09 Feb 2018 20:52:25 +0100
Received: from smtp.easynet.es (smtp.easynet.es [213.139.0.17])
	by mx005.kontent.com (Postfix) with ESMTP id 7C51B7A00CA;
	Fri,  9 Feb 2018 20:52:23 +0100 (CET)
Received: from [184.95.51.179] (helo=User)
	by smtp.easynet.es with esmtpa (Exim 4.72)
	(envelope-from <m.lotto@europe.com>)
	id 1ekEiM-0004xY-Ed; Fri, 09 Feb 2018 20:52:17 +0100
Reply-To: <sevillaseguroses@europe.com>
From: "EUROMILLION"<m.lotto@europe.com>
Subject: AWARD NOTIFICATION
Date: Fri, 9 Feb 2018 04:51:37 -0800
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_008F_01C2A9A6.71F6EA96"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
X-Outgoing-SpamScan-Signature: a83542af1de6c224fcd326dcdb757ece
X-Easynet-bounce-key: easynet.es;m.lotto@europe.com;1518205941;28efdda2;
Envelope-To: <anton.rommerskirchen@gmx.de>
===end

This is a spam mail for me - I dont need a EUROMILLION info ... dont play that
sick kind of game any more ...

So the filter checks for the header and starts to look for a Received tag.

It will find the 

Received: from [184.95.51.179] (helo=User)
	by smtp.easynet.es with esmtpa (Exim 4.72)
	(envelope-from <m.lotto@europe.com>)
	id 1ekEiM-0004xY-Ed; Fri, 09 Feb 2018 20:52:17 +0100

and their the 184.95.51.179 ipv4 number.

It checks its whitelist and blacklist matches and if it does not find a hit it
puts the thing on the traceroute script.

nohup traceroute "184.95.51.179"

will then be executet.

The result is read in into the filter and two new tags are created with

X-atrsoftgmbh-mailfilter-result: result=1; ruleid=1000050
X-atrsoftgmbh-mailfilter-trace: exist=0 ; ruleid=1000050
    traceroute to 184.95.51.179 (184.95.51.179), 30 hops max, 60 byte packets

Nothing on the trace - the default xx * * * lines are removed ...

Hm. This could be a candidate for a ROUTECOUNT 0 match...

Will have NO host info at all, so 0 hit for a hostinfo line....

Other example.

===begin
From online@networkworldmedia.com  Sun Feb 11 13:26:55 2018
Return-Path: <online@networkworldmedia.com>
Received: from ltau2.alphaset.de (localhost [127.0.0.1])
	by ltau2.alphaset.de (8.15.2/8.15.2) with ESMTP id w1BCQoKF002074
	for <popdmail@localhost>; Sun, 11 Feb 2018 13:26:55 +0100
Date: Sun, 11 Feb 2018 13:26:55 +0100
Message-Id: <201802111226.w1BCQoKF002074@ltau2.alphaset.de>
Received: from pop.gmx.de
	by ltau2.alphaset.de with POP3 (fetchmail-6.3.26)
	for <popdmail@localhost> (single-drop); Sun, 11 Feb 2018 13:26:55 +0100 (CET)
Received: from mail6.networkworldmedia.com ([65.79.165.125]) by mx-ha.gmx.net
 (mxgmx117 [212.227.17.5]) with ESMTP (Nemesis) id 1MKJIV-1eQzox2nVP-00LHTR
 for <anton.rommerskirchen@gmx.de>; Sun, 04 Feb 2018 19:10:28 +0100
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; s=key1; d=networkworldmedia.com;
 h=From:To:Reply-To:Subject:Mime-Version:List-Unsubscribe:Content-Type:Content-Transfer-Encoding; i=online@networkworldmedia.com;
 bh=Y8WTsDSM/NXV8lsM+AbCxuYUdDQ=;
 b=wcGJtrKcA6Ig9cOz5HxiDmtE+yiN+gRty7Ut5u2Ln+VrSP231F4fosFye6BsYMfqhRKmfNSPCmCi
   HcJfBvs0IOiYh6oRv1f0Bggmgfi4c5YC9EDbvRv/G3hpgZsVa2e16zhc6LKhc2ZxLjKTS7ZEfAbn
   NtKJ+LKwjWzj7z6EQJc=
DomainKey-Signature: a=rsa-sha1; c=nofws; q=dns; s=key1; d=networkworldmedia.com;
 b=SPbYv48A1ZWWaVaYkgZBqHYkzWVL9RWe+kwVqauityuSgqUhDUOXe+7ErdqN4GUcecOo45inwhLz
   ztGK60rZVVrOXeqEfWPG3bBnlf7JdYR2U9Q3VzZBYs5r3VlY6vQ1FOswc7NMRvlyz+t1F2EqGiWF
   vVrUopAECFN6b8Kiras=;
Received: from V12SMTP3 (127.0.0.1) by mail6.networkworldmedia.com id het6982dgjc5 for <anton.rommerskirchen@gmx.de>; Sun, 4 Feb 2018 13:10:28 -0500 (envelope-from <online@networkworldmedia.com>)
x-sender: "NetworkWorld Online Resources" <online@networkworldmedia.com>
x-receiver: anton.rommerskirchen@gmx.de
x-job: 460524_NWW_0204
From: "NetworkWorld Online Resources" <online@networkworldmedia.com>
To: <anton.rommerskirchen@gmx.de>
Reply-To: J460524-R68992@networkworldmedia.com
Subject: =?utf-8?Q?What's the Phishing Breaking Point=3F?=
Mime-Version: 1.0
List-Unsubscribe: <mailto:oo-J460524-R68992@networkworldmedia.com>
===end


This time the revcieved tag is
Received: from mail6.networkworldmedia.com ([65.79.165.125]) by mx-ha.gmx.net
 (mxgmx117 [212.227.17.5]) with ESMTP (Nemesis) id 1MKJIV-1eQzox2nVP-00LHTR
 for <anton.rommerskirchen@gmx.de>; Sun, 04 Feb 2018 19:10:28 +0100

and the traceroute is:

X-atrsoftgmbh-mailfilter-result: result=1; ruleid=9990000
X-atrsoftgmbh-mailfilter-trace: exist=0 ; ruleid=9990000
    traceroute to 65.79.165.125 (65.79.165.125), 30 hops max, 60 byte packets
     1  * * *
     2  * * *
     3  10.216.1.60 (10.216.1.60)  99.136 ms  99.422 ms  99.675 ms
     4  10.216.3.137 (10.216.3.137)  99.825 ms  104.391 ms  104.579 ms
     5  10.216.2.26 (10.216.2.26)  106.208 ms  111.022 ms  111.352 ms
     6  145.254.2.177 (145.254.2.177)  116.818 ms  31.851 ms  32.714 ms
     7  145.254.2.177 (145.254.2.177)  36.865 ms  40.334 ms  46.857 ms
     8  ae11-100-xcr1.fri.cw.net (166.63.204.209)  46.344 ms  57.129 ms  52.284 ms
     9  ae14-xcr1.ptl.cw.net (195.2.31.234)  133.633 ms  137.489 ms  149.489 ms
    10  et-7-1-0-xcr1.nyh.cw.net (195.2.24.241)  149.565 ms  145.177 ms  141.543 ms
    11  ae13-xcr2.nyk.cw.net (195.2.25.69)  130.637 ms  137.349 ms  125.777 ms
    12  nyc2-brdr-01.inet.qwest.net (63.146.27.61)  125.981 ms  119.288 ms  116.779 ms
    13  ewr-edge-14.inet.qwest.net (67.14.7.190)  119.738 ms  118.285 ms  118.444 ms
    14  65.119.198.66 (65.119.198.66)  118.699 ms  119.586 ms  118.158 ms
    15  crl1cr1-te-0-0-1-2.sgns.net (66.179.228.242)  118.850 ms  119.874 ms  117.930 ms
    16  crlir11-xe-2-0-0.sgns.net (66.179.229.254)  117.046 ms  111.105 ms  112.048 ms

If you see this and want to block the mails you can use the ROUTE matcher this way
ROUTE
 sgns.net
COPY lists/nets/sgns_net
ENDRULE

So you end up with all mails from that network in a separate list ...

Its of course a bit harsch to say every one from a network is a - well - spammer ...
But sometimes the spammer hides behind a nice looking box with some simple
download stuff that looks like a simple mirror of linux or freebsd or nice
programs for windows boxes ....

Then you do the best if you block anything that comes from behind that box ...

ROUTE
 darknet.net
COPY lists/nets/darknet_net
ENDRULE

In any case :

Sometimes you have to accept your provider does not support traceroute scans -
or the target is behind a well known official provider behind some trick network ...

Thats a case to use the traceroute AND some code stuff in ...

You can use also

ROUTECOUNT number

to make a match (its a hack in this sense, no regular expressions at all ... but works ).

If you find yourself in a perfect world where every system has a name - and its not lying
about it - a traceroute is ultimative.

But if a spammer uses fake networks and you get in a max hops thing ...

You decide if this is a thing you use.

One last hint.

If you set TRACEROUTE higher than 1 you do the traceroute even if there is
traceroute info in.

If you set it to 1 you recycle already existing info - so be sure you know what you want.

I use a 2 in my first account that fetches mails from internet - I dont trust
fake traceroute ...

-------------------------------------------------------------------------------

Pools

Ok, we have alredy talked about them...

A pool is a directory that contains rulefiles.

You have to be precise about the naming of that files.

The pool is used in two ways.

One is to get all files in it in when you start the filter.

To do that the pool has to be accessible (ha, what a joke ... of course
it is .. ahm, ups ...)

Check director rights. Check the working directory for the filter.

Then put the rule files into the directory you have choosen ...

Next.

For a pool the files have to follow a naming convention.

The name should be :
s number . rule

s is the character s

dot is the character .

number is  a number, can be zero filled # what I use myself !

The last part must be the text rule.

Any thing else is ignored (no subdirectories, no files with other names ... )

Well. In theory.

The thing comes in when you add a rule by new rule.

The content of the directory is scanned and the next number is used  and the
new rule file gets auomatically the next number.

So no overwrite of rules if only one filter is active.

Yes.

I know, how to use...

We have in the rule file an INCLUDE thing.

This means we can write after a rule - not INSIDE ! - an include and
give it the path to the pool.

The rest is simple.

The load for the actual file stops, the targetet directory is scanned and all rule files in
there are loaded in the order of filenames (there is a sort in,
but its a name sort, not a number sort .. so the filled with 0 numbers make sense...)

If you want to you can also include a file directly.

See this two here

# spammer rule ... 
RULE 1000
COPY filter/spam
WHY
ENDRULE


INCLUDE spampool

INCLUDE ./royal_casino_rule.rule

First I make the basic work for my spam , then I
include the pool with all the tiny match rules, and then I have one file with a
bastard in at last ...

This is how a pool is used in the filter for reading.

Together with generation of rules its worth the work ...


-------------------------------------------------------------------------------

How to adjust things

First things first.

You need the basic rule file.

settings

blablabla

endsettings


Ok. That is done.

Then you need the lists you want to catch and the important mails.

Perhaps this is the first spot to use a pool, perhaps not.

My 15 rules are - ok in the file, so I dont use a pool here ..

Next is the spam thing.

I use a pool and I maybe will set up a second one for complex things...

Next is the last rule that does work, it corrects some mistakes of a spam rule
didnt have time to do the spam rule right, so its in here ...

Last is the always rule to put the survivors in place ...

Next is to put the thing with the defaultname in the home directory - or to
use the -r option for the filter program run.

Then the filter itself.

It has to run in two cases for me.
One is for my box where I read the mails.

I need there the filtering of lists.

The other is for the account where I pull the mails from the internet,
Precise from a freemailer where all my mails end up in the first place.

There I run the spam filtering.

So I have to run it for me allone, but at two places.

Make a copy of the scripts, set it up there with a copy of the rules ...

You can also think about a multiuser scenario.

There you need the script in a place hidden for the other users with a gid bit
set so that the thing can SEND to different users on the box... or use
SENDMAIL only for that ...

Both has its charme - using SEND is rough hundrets times faster and much
cheaper in resources.

Using a spechial version of sendmail only for the copy to the target users
is an alternative. Also using queueing for the whole process to speed it up..

Next is testing - first without filters.

In the testing you will start to love the logfile ...

UPS, yes, didnt mention it so far.

There is the -l option in the filter.
Also the default is in the home directory and mailfilter.log .

So you see for every run the initial file or directory, the rulefile
settings, the number and rule source files (here the convention to name them
as the numbers come in handy !) and then for the mails in the target file
which rule had an interesting thing .. a hit, a not thing or a never
or always ...

So you can see what happend - and if any thing fails, the -c makes the thing
write down the mails so you can now use the mails number and check directly it.

Helps.

After the rules for spam come in ... test test test ....

-------------------------------------------------------------------------------

How to handle errrrrrroorrrs  - ups ...

There is no perfect world.

So errors are possible.

If you have a bad setup for settings its mostly covered and the thing stops.

For rules its diffrent . I dont like to stop for an defective rule ...

I skip it.

So you have a filter - but it normally leaves a bit too much in, not drops.

If you have an operation that is not possible, say a copy that not work,
a send that not work or a sendmail or proc, you get an error in the console
and in the log.

If you have a subprogram - it depends on the error.
I let live a mail if the check is not a 1.

So if your program wrecks its not a 1, and if it runs normal you are in place
to return the right number at last.
In doubt make a shell wrapper and do the things you have to do.

SEE ALWAYS INTO THE LOG IF THE ERROR IS NEAR ...

# perhaps I make a summary mail and sent it at the end to the master
of the process, but for now you have to check the log....

For testing : use the -r for a simple rulefile, the -l for a clean logfile.


-------------------------------------------------------------------------------

My private collection of rules ... 

If you are a spamer - skip this chapter, it will HURT you ...


------
# spammer rule ... 
RULE  EXTENDS 1000000
# definitiv bad guys out
HEADER
 hugosoft.deatr
!^atr@hugosoft\.de
ENDRULE

The spammer uses the mailardes, but appends it with something ...
So if it is not exactly the mailadress it is catched and gose to hell ..

------

# spammer rule ... 
RULE  EXTENDS 1000000 
HEADER
 From.*adius.*group
ENDRULE

The spammer uses a fix from... good for me. simple rule ...
perhaps today not so cleaver any more...

------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 Subject: .*(anadian.*RX|Sexy Lady sucht)
ENDRULE

This time the spammer has a fixed subject...
also not so clever ...

-------


# spammer rule ... 
RULE  EXTENDS 1000000
BODY
 http.*adult-localsearch.*\.net
ENDRULE


This spamer uses a special http link in the body.
Bye bye. will never be read again ....

-------

# spammer rule ... 
RULE  EXTENDS 1000000
BODY
 http.*adult-localsearch.*\.net
ENDRULE

This spammer sents the mail always to a - real ? - mailadress - but not to me...

I get it by some trick in the target mailserver ...

So no way to stop that at the beginning ...

But now ... never read it again ...

-------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 From: .*@outlook\.com
AND
HEADER
 Cc: .*@gmx\.de
ENDRULE

This is arelative new one. The spammer uses some - real ? - account on a big
mail server network, and puts you into a CC ....

Never get that again to read ....

------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 bamboo\.co\.ua
ENDRULE


This was a spammer using in the header all the time this network...

Never see you again ...

------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 @.*biz\.ua
ENDRULE

A new one. Never had freinds or contacts to ... biz ukraine ? huh...

the traceroute showed it came from a russian provider in real ...

Good - more vodka for me, less for you ...

-----

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 from by to
ENDRULE


This one had a nice trick.

IT dit construct the first received tag manually - no mailer on this planet
does that... so the thing had always from to by in first ...

Now its the first to went down the toilett....

-------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 From: .*info@atrsoft.de
AND
HEADER
 To: .*info@atrsoft.de
ENDRULE


Nice try. Sent me a mail for my company from ... my company ...

Hah.

Now i have the last laugh about it ... hihi...

-------

RULE  EXTENDS 1000000
HEADER
 ^From: .*\.online
ENDRULE


New one. Its one of a douzen or so.. all use a ending domain that is
MEANINGLESS to me ...

So i now never have to think about it ...

------

RULE  EXTENDS 1000000
NOT HEADER
 ^To:
ENDRULE


The famous try to sent a mail to --- no one in ....

If you dont sent it to me ... its not for me ...

------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
  Subject: =\?UTF-8\?B\?SWNoIG3DtmNodGUsIGRhc3MgZHUgZWlucyB2ZXJzdGVoc3TigKY=\?=
ENDRULE


Nice try. I see int he Subject of the mailcleint a text, but it has
that crab in ... ok, if you dont want to tlk plain ascii to me...
I wont hear any more ...

-----

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 From:[\s]*$
ENDRULE


Thats another nice one. No From:

If you dont tell me from where you are, I wont listen to you any more...

------

# spammer rule ... 
RULE  EXTENDS 1000000
HEADER
 To:.*@gmx\.de.*@gmx\.de
!anton.rommerskrichen@gmx.de
ENDRULE

The last one.

This time a spammer sents to multiple user of a network serve ...
so i carefully check if its for more than one in TO, then kill it if its
not exactly for me ...

by by spammer...


-------

The rest is rough a replica of one of the prototypes in here. I use the
traceroute to do the rest and close the path from the spammers official
sending network to me.

If a mail has no host in the trace --- i put it on the zero list with
routcount 0 ...

The rest is seeing about the mails for a week or so for the subjects.

I never open a body of them ... dont do that any more ...



-------------------------------------------------------------------------------

History

The thing is as always.

You fire up your new installed system, then you fire up your new mailclient
version.

Then you have a more and more ... disappointing experiance ...

Then you decide to give it a try for a new folder here and there ...

Then you realise its not working right ...

Then you want to switch to another ...

And after reading tons of nice and shiny descriptions like ...

... make the folders exactly like in the old one ...

... sometimes a file is not transfered ....

... for me it worked ...

... for me it worked not at all ...


you decide to do it not dirty.

You are a software developer after all ...

So I started to make an analyse and found that most things were at least
a problem of the new index thing of my former mailclient.

It had simply changed - and I had not done every upgrade one by one ...

So I got out of sync for the indexing and ...

Things became bad.

Very bad.

I lost the ability to do simplest lookups, lost even the possibility
to select mails in folders that I had still in the main gui ...

Thats bad. I needed not the "make all folders like in the old " thing, I
needed a total clean export and import.

But there is none - no one seems to like an neutral export at all ..

Everyone likes an import if - its an outdated and long gone version
for the others ... haha ... nice thinking...

So I began the scan thing.

First with find - but using this in a shell script was far from good
so I switched to perl and then to the perl find.

OK. I had made some steps, and I realized that it would be better to do it
in several steps, not one.

I had first the scan of the old files, then the  decide what to do thing,
the creation of new directories ...

So I came up with a scanner.

This was a thing that worked nearly ok - found after some debugging that I
had still an mbox file in my system - its a maildir based today...

So much for theory.

I made the analyse for the target one - and found the directories very
different at best ...

OK. So the thing became after the scanner the generator - still no damage
done, only a new text file ...

This gave me the option to do the thing with the normalized names.

And then a colleague of mine came with "oh, and I want to migrate then to ...."

Of course not MY favorite one ...

So I decided to make the executor work for that too.

After some playing with it I had found nearly everthing ok ...

Had made my experiance with evolution - and the scan and rebuild index at exit
thing...

Then I had seen the msf thing in thunderbird - oh boy, what a mess ...

Then I tried the others ... only to see that its still one of the three big
that I want to use - but now I could do it for all of them ...

Then I integrated more checks and more errors.. so I got again debugging
sessions to do, but I found next problems now faster ...

And yes, I did even learn a thing about using the oo way with perl...

So I finally made a hunt for the possible systems ...

And came up with only a hand full more.

At last I decided to make an export and import thing for my own.

So I introduced the vanilla - again errors and again more debugging ..

Found the problems for a structure where no structure was and - bingo.

Now I peeked at the last ones -- but many only made a cold shoulder...

I tried the command line tools - mutt, pine .. ok, alpine now ..

And found them to do the mbox thing just like thunderbird....

Then I tried one last time to get the beasts up that were not
running on the box ... but no luck.

So I ended with the list I have now (25.02.2018 german time) in.

Hope I will make it now with my plan to make a automatic import.

And have decided to give this to YOU so you can solve your problem with it.

Ah. The Filter ...

I almost forgot it.

I have a setup with a mail account that collects all mails for a big
freemailer.

Then I use an account on my server to get my mails from it. Its done by

fetchmail

The thing does it now since 2002 ...

The fetchmail is used from a user that has only to deal with mails fetching,
filter out the lists and some spam , and deliver the rest to the main user on
my box.

So I had the

procmail

in and it worked for nearly the same time.

Till an upgrade made the thing no longer working.

So I started after the transfer the filter thing.

It was also a rework of my transfer, and made many simple bugs visible.

So I checked to make any thing work not only for my thing, but also
for the user that has no procmail in or so and simply needs a filter.

Then I found some uses for the rule system  - it is now using a pool
for rules that filter out some unwanted mails.

The rest is still now in motion. I try to make the best for filtering,
but it seems that a simple match filter is too simple to do the job
today.

So I try to make it better every day - at least a bit... 

Happy mail filtering.

------------------------------------------------------------------

Contact
In case you have questions - read this howto. Check the source.

If this is not enough sent me a mail

atr AT atrsoft DOT de

replace AT with the mails at sign and dot with the . and delete the spaces.

This is against the automates that hunt for email adresses ..

Next.

If you have trouble - I read mails not on a per day, more a per
week base .. you get answer, but it can take a week.

Next.

If you have no clue - sent me the scanfile, the planfile, the logfile.

NO Mailtree - I dont plan to access somebody mails - and it would be
impossible for real big ones... have 3 G for myself ...

So the three files and the output of them - a reroute into a file.

Please - dont estimate I can read minds .. if you did something after
a scan and changed something here and there ... I will not get it.

Next.

Pack those files into one zip / tar .

And compress it - or my mailbox will not handle it ...

Thanks for helping me to help you ...

The source is on github, so I hope somebody will still step in and
maintaine it when I am gone - then the email above  of course will
change to that guy ..


If you have problems with rules - zip them and I try to see what I can do.

At last :

This is work under the APACHE 2.0 license, so dont do silly things with it..

